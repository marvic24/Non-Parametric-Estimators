% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{calc_pca}
\alias{calc_pca}
\title{Performs a principal component analysis on given \emph{matrix} or \emph{time
series} using \code{RcppArmadillo}.}
\usage{
calc_pca(mat_rix)
}
\arguments{
\item{\code{mat_rix}}{A \emph{matrix} or a \emph{time series}.}
}
\value{
A \emph{matrix} of variable loadings (i.e. a matrix whose columns contain
  the eigenvectors).
}
\description{
Performs a principal component analysis on given \emph{matrix} or \emph{time
series} using \code{RcppArmadillo}.
}
\details{
The function \code{calc_pca()} performs a principal component analysis
   on a \emph{matrix} using \code{RcppArmadillo}.
}
\examples{
\dontrun{
# Create a matrix of random returns
re_turns <- matrix(rnorm(5e6), nc=5)
# Compare calc_pca() with standard prcomp()
all.equal(drop(NPE::calc_pca(re_turns)), 
  prcomp(re_turns))
# Compare the speed of RcppArmadillo with R code
library(microbenchmark)
summary(microbenchmark(
  rcpp=NPE::calc_pca(re_turns),
  rcode=prcomp(re_turns),
  times=10))[, c(1, 4, 5)]  # end microbenchmark summary
}

}
