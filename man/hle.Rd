% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{hle}
\alias{hle}
\title{Calculate the nonparametric Hodges-Lehmann estimator of location for a
\emph{vector} or a single-column \emph{time series} using \code{RcppArmadillo}
and \code{RcppParallel}.}
\usage{
hle(vec_tor)
}
\arguments{
\item{\code{vec_tor}}{A \emph{vector} or a single-column \emph{time series}.}
}
\value{
A single \emph{double} value representing Hodges-Lehmann estimator of 
  the vector.
}
\description{
Calculate the nonparametric Hodges-Lehmann estimator of location for a
\emph{vector} or a single-column \emph{time series} using \code{RcppArmadillo}
and \code{RcppParallel}.
}
\details{
The function \code{hle()} calculates the Hodges-Lehmann estimator of 
  the \emph{vector}, using \code{RcppArmadillo} and \code{RcppParallel}. The 
  function \code{hle()} is very much faster than function \code{wilcox.test()}
  in \code{R}.
}
\examples{
\dontrun{
# Calculate VTI returns
re_turns <- as.numeric(na.omit(NPE::etf_env$re_turns[ ,"VTI"]))
# Compare hle() with wilcox.test() - equal only approximately
all.equal(wilcox.test(re_turns, conf.int = TRUE)$estimate, 
  drop(NPE::hle(re_turns)), check.attributes=FALSE)
# Install package ICSNP for nonparametric statistics
install.packages("ICSNP")
# Compare hle() with ICSNP::hl.loc() - almost equal
all.equal(ICSNP::hl.loc(re_turns), 
  drop(NPE::hle(re_turns)), check.attributes=FALSE)
# Compare the speed of hle() with R code
library(microbenchmark)
summary(microbenchmark(
  Rcpp=NPE::hle(re_turns),
  Rcode=wilcox.test(re_turns, conf.int = TRUE),
  times=10))[, c(1, 4, 5)]  # end microbenchmark summary
}

}
