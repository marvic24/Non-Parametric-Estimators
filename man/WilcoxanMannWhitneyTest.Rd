% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{wilcoxanMannWhitneyTest}
\alias{wilcoxanMannWhitneyTest}
\title{Performs two sample Wilcoxan-Mann-Whitney rank sum test also known as 
Mann-Whitney U Test on \emph{vector} or a single-column \emph{time series}
using \code{RcppArmadillo} and \code{boost}.}
\usage{
wilcoxanMannWhitneyTest(x, y, mu = 0, alternative = "two.sided",
  exact = FALSE, correct = TRUE)
}
\arguments{
\item{\code{x}}{A \emph{vector} or a single-column \emph{time series}.}

\item{\code{y}}{A \emph{vector} or a single-column \emph{time series}.}

\item{\code{mu}}{A \emph{double} specifing an optional parameter used 
to form null hypothesis. Default value is \emph{zero}.}

\item{\code{alternative}}{a \emph{character} string specifying the alternative
hypothesis. It must be one of :
\itemize{
  \item "two.sided" two tailed test.
  \item "greater" greater(right) tailed test.
  \item "less" smaller(left) tailed test.
}
(The default is \emph{two.sided} test.)}

\item{\code{exact}}{A {boolean} indicating whether an exact p-value should be computed.}

\item{\code{correct}}{A {boolean} indicating whether to apply continuity correction
in normal approximation for the p-value.}
}
\value{
A \emph{double} indicating p-value of the test.
}
\description{
Performs two sample Wilcoxan-Mann-Whitney rank sum test also known as 
Mann-Whitney U Test on \emph{vector} or a single-column \emph{time series}
using \code{RcppArmadillo} and \code{boost}.
}
\details{
The function \code{wilcoxanMannWhitneyTest()} carries out the wilcoxan-Mann-Whitney
  signed rank test on \emph{x} & \emph{y} and returns the \emph{p-value} of the test.
  By default (if \code{exact} is not specified), an exact p-value is computed if sample 
  contains less than 50 finite values and there are no ties. Otherwise, a normal approximation
  is used.
}
\examples{
\dontrun{
# Create a vector of random data
x <- round(runif(10), 2)
y <- round(runif(10), 2)
# Carry out WMW signed rank test on the elements in two ways
all.equal(wilcox.test(x, y)$p.value, drop(NPE::wilcoxanMannWhitneyTest(x, y)))
# Compare the speed of Rcpp and R code
library(microbenchmark)
summary(microbenchmark(
  rcpp=wilcoxanMannWhitneyTest(x, y),
  rcode=wilcox.test(x, y),
  times=10))[, c(1, 4, 5)]  # end microbenchmark summary
}

}
